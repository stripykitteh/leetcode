from typing import List
from functools import cache

class Solution:    
    @cache
    def longestCommonSubsequence(self, text1: str, text2: str, acc: int=0) -> int:
        
        set1 = set(text1)
        set2 = set(text2)
        common = set1.intersection(set2)
        if not common:
            return 0
        set1_drop = ''.join(list(set1.difference(common)))
        text1_table = str.maketrans("X","X",set1_drop)
        text1_drop = text1.translate(text1_table)
        set2_drop = ''.join(list(set2.difference(common)))
        text2_table = str.maketrans("X","X",set2_drop)
        text2_drop = text2.translate(text2_table)

        # by convention make text1 the shorter string
        if len(text1_drop) > len(text2_drop):
            tmp = text2_drop
            text2_drop = text1_drop
            text1_drop = tmp

        #print(best,text1_drop,text2_drop)

        # find all occurences of first character in text1_drop in text2_drop
        res = [i for i in range(len(text2_drop)) if text2_drop.startswith(text1_drop[0], i)]
        if res:
            best = 0
            for i in res:
                curr = self.longestCommonSubsequence(text1_drop[1:],text2_drop[i+1:],acc+1)
                if curr > best:
                    best = curr
            best = best+1
        if len(text1_drop) > 1:
            curr = self.longestCommonSubsequence(text1_drop[1:],text2_drop,acc+1)
            if curr > best:
                best = curr
        return best
        
if __name__ == '__main__':

    text1,text2 = "abcde","ace"
    print(Solution().longestCommonSubsequence(text1,text2))
    text1,text2 = "abc","abc"
    print(Solution().longestCommonSubsequence(text1,text2))
    text1,text2 = "abc","def"
    print(Solution().longestCommonSubsequence(text1,text2))    
    text1,text2 ="oxcpqrsvwf","shmtulqrypy"
    print(Solution().longestCommonSubsequence(text1,text2))
    text1,text2 ="abcdefghijklmnopqrstuvwxyz","aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz"
    print(Solution().longestCommonSubsequence(text1,text2))    
